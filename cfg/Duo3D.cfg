#!/usr/bin/env python
PACKAGE = "duo3d_driver"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# DUO camera parameters
#       Name                  Type   Level Description                     Def Min Max
gen.add("gain",             double_t,  0, "Image gain value",               0,  0, 100)
gen.add("exposure",         double_t,  0, "Image exposure value",           50, 0, 100)
gen.add("auto_exposure",      bool_t,  0, "Image auto exposure value",      False)
gen.add("camera_swap",        bool_t,  0, "Image swap",                     False)
gen.add("horizontal_flip",    bool_t,  0, "Horizontally image flip",        False)
gen.add("vertical_flip",      bool_t,  0, "Vertically image flip",          False)
gen.add("led",	            double_t,  0, "LED brightness value",           10, 0, 100)
accel_range_enum = gen.enum([ gen.const("2g",  int_t, 0, "Accelerometer full scale range +/- 2g"),
                              gen.const("4g",  int_t, 1, "Accelerometer full scale range +/- 4g"),
                              gen.const("8g",  int_t, 2, "Accelerometer full scale range +/- 8g"),
                              gen.const("16g", int_t, 3, "Accelerometer full scale range +/- 16g")
                            ], "Enum to set Accelerometer Range")
gen.add("accel_range",	       int_t,  0, "Accelerometer Range",            0,  0, 3, edit_method = accel_range_enum)
gyro_range_enum = gen.enum([ gen.const("250deg_s",  int_t, 0, "Gyroscope full scale range 250 deg/s"),
                             gen.const("500deg_s",  int_t, 1, "Gyroscope full scale range 500 deg/s"),
                             gen.const("1000deg_s", int_t, 2, "Gyroscope full scale range 1000 deg/s"),
                             gen.const("2000deg_s", int_t, 3, "Gyroscope full scale range 2000 deg/s")
                           ], "Enum to set Gyroscope Range")
gen.add("gyro_range",	       int_t,  0, "Gyroscope Range",                0,   0, 3, edit_method = gyro_range_enum)
gen.add("imu_rate",	        double_t,  0, "IMU Sampling Rate",            100,  50, 500)

exit(gen.generate(PACKAGE, "duo3d_driver", "Duo3D"))
